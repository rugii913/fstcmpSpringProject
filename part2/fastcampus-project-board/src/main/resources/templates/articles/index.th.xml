<?xml version="1.0"?>
<thlogic> <!--cf. Spring boot 2.6까지만 해도 decoupled logic에 대한 inspection이 잘 동작하지 않았으나, 2.7에서는 잘 동작하는 편-->
    <attr sel="#header" th:replace="header::header"/>
    <attr sel="#footer" th:replace="footer::footer"/>

    <attr sel="main" th:object="${articles}">
        <attr sel="#search-type" th:remove="all-but-first">
            <attr sel="option[0]"
                  th:each="searchType : ${searchTypes}"
                  th:value="${searchType.name}"
                  th:text="${searchType.description}"
                  th:selected="${param.searchType != null && (param.searchType.toString == searchType.name)}"
            />
        </attr>
        <!--직전에 검색을 했다면 param에 searchType이 남아있을 것 ~ 그 param의 searchType을 다음 뷰에서도 유지시켜줌-->
        <attr sel="#search-value" th:value="${param.searchValue}" />
        <!--직전에 검색을 했다면 param에 searchValue를 다음 뷰에서도 유지시켜줌-->

        <attr sel="#article-table">
            <attr sel="thead/tr"> <!--게시판 각 컬럼명을 클릭할 수 있게 만들어, 정렬하도록 기능 부여-->
                <!-- sort 파라미터에 넣어야할 데이터와 데이터의 형식은 Spring Data의 Page 인터페이스에 기준이 정의되어 있음 => 이 기준에 따라서 넣어줘야함, 기준을 바꿀 수는 있긴하지만, 그대로 쓴다-->
                <attr sel="th.title/a" th:text="'제목'" th:href="@{/articles(
                    page=${articles.number},
                    sort='title' + (*{sort.getOrderFor('title')} != null ? (*{sort.getOrderFor('title').direction.name} != 'DESC' ? ',desc' : '') : ''),
                    searchType=${param.searchType},
                    searchValue=${param.searchValue}
                )}"/>
                <attr sel="th.hashtag/a" th:text="'해시태그'" th:href="@{/articles(
                    page=${articles.number},
                    sort='hashtag' + (*{sort.getOrderFor('hashtag')} != null ? (*{sort.getOrderFor('hashtag').direction.name} != 'DESC' ? ',desc' : '') : ''),
                    searchType=${param.searchType},
                    searchValue=${param.searchValue}
                )}"/>
                <attr sel="th.user-id/a" th:text="'작성자'" th:href="@{/articles(
                    page=${articles.number},
                    sort='userAccount.userId' + (*{sort.getOrderFor('userAccount.userId')} != null ? (*{sort.getOrderFor('userAccount.userId').direction.name} != 'DESC' ? ',desc' : '') : ''),
                    searchType=${param.searchType},
                    searchValue=${param.searchValue}
                )}"/>
                <attr sel="th.created-at/a" th:text="'작성일'" th:href="@{/articles(
                    page=${articles.number},
                    sort='createdAt' + (*{sort.getOrderFor('createdAt')} != null ? (*{sort.getOrderFor('createdAt').direction.name} != 'DESC' ? ',desc' : '') : ''),
                    searchType=${param.searchType},
                    searchValue=${param.searchValue}
                )}"/>
            </attr>

            <attr sel="tbody" th:remove="all-but-first"> <!--목업 데이터 중 all-but-first 첫번째 것만 남기고 모두 지운다-->
                <attr sel="tr[0]" th:each="article : ${articles}"> <!--0번째 tr을 잡아서 순회를 돌아서 치환-->
                    <attr sel="td.title/a" th:text="${article.title}" th:href="@{'/articles/' + ${article.id}}" /> <!--title 클래스 붙은 것 중 a 태그로 들어감-->
                    <attr sel="td.hashtag" th:text="${article.hashtag}" />
                    <attr sel="td.user-id" th:text="${article.nickname}" />
                    <attr sel="td.created-at/time" th:datetime="${article.createdAt}" th:text="${#temporals.format(article.createdAt, 'yyyy-MM-dd')}" /> <!--created-at 클래스 붙은 것 중 time 태그로 들어감-->
                    <!--Thymeleaf #temporals utility 시간 정보 등 포매팅-->
                </attr>
            </attr>
        </attr>

        <attr sel="#pagination">
            <attr sel="li[0]/a"
                  th:text="'previous'"
                  th:href="@{/articles(page=${articles.number - 1}, searchType=${param.searchType}, searchValue=${param.searchValue})}"
                  th:class="'page-link' + (${articles.number} <= 0 ? ' disabled' : '')"
            />
            <attr sel="li[1]" th:class="page-item" th:each="pageNumber : ${paginationBarNumbers}">
                <attr sel="a"
                      th:text="${pageNumber + 1}"
                      th:href="@{/articles(page=${pageNumber}, searchType=${param.searchType}, searchValue=${param.searchValue})}"
                      th:class="'page-link' + (${pageNumber} == ${articles.number} ? ' disabled' : '')"
                />
            </attr>
            <attr sel="li[2]/a"
                  th:text="'next'"
                  th:href="@{/articles(page=${articles.number + 1}, searchType=${param.searchType}, searchValue=${param.searchValue})}"
                  th:class="'page-link' + (${articles.number} >= ${articles.totalPages -1} ? ' disabled' : '')"
            />
        </attr>
    </attr>
</thlogic>